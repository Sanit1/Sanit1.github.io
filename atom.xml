<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>土狼的代码窝</title>
  
  <subtitle>一个后端小小程序员的代码窝</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://Sanit1.github.io/"/>
  <updated>2019-07-21T08:13:45.228Z</updated>
  <id>https://Sanit1.github.io/</id>
  
  <author>
    <name>Sanit</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>API文档自动生成</title>
    <link href="https://Sanit1.github.io/2016/10/24/API%E6%96%87%E6%A1%A3%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90/"/>
    <id>https://Sanit1.github.io/2016/10/24/API文档自动生成/</id>
    <published>2016-10-23T17:12:00.000Z</published>
    <updated>2019-07-21T08:13:45.228Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文主要讲述自动化API文档生成——apidoc。网上有几个篇文章都只是介绍apidoc的，具体怎么在自己的项目中使用以及与其他配合使用都是没介绍的。最近开始玩服务器，了解到了有Windows与Linux之间共享文件的方法，就是samba。然后具体和apidoc结合起来非常好用，所以本文就当做笔记来把它记录下来了</p></blockquote><a id="more"></a><h3 id="apidoc简介"><a href="#apidoc简介" class="headerlink" title="apidoc简介"></a>apidoc简介</h3><p>apidoc是node的一个插件，它的功能就是能让把我们的代码注释生成api文档。它支持php java javascript python等多种语言。因为写接口的同学通常很烦写完接口还得写文档，文档更新又麻烦。apidoc不仅支持项目的版本，也支持api的版本。在我所接触过的文档生成工具里面，这个是我感觉比较好用的。</p><hr><h3 id="apidoc的安装"><a href="#apidoc的安装" class="headerlink" title="apidoc的安装"></a>apidoc的安装</h3><p>apidoc是node的一个插件，那么它的安装就依赖node。node的具体安装我这里就不详细说了，去node官网下包,解压，编译然后安装。直接执行:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install apidoc -g</span><br></pre></td></tr></table></figure></p><hr><h3 id="samba的安装"><a href="#samba的安装" class="headerlink" title="samba的安装"></a>samba的安装</h3><p>samba的安装也很简单，本人用的是CentOS，我直接执行:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install samba</span><br></pre></td></tr></table></figure></p><p>就安装好了</p><hr><h3 id="samba的配置"><a href="#samba的配置" class="headerlink" title="samba的配置"></a>samba的配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[public]</span><br><span class="line">comment = Public Stuff</span><br><span class="line">path = /share/doc  //你需要共享文件夹的路径</span><br><span class="line">browseable = yes  //可浏览性</span><br><span class="line">guest ok = yes  //是否允许访客</span><br><span class="line">public = yes  //是否可上传</span><br><span class="line">writable = yes  //是否可写</span><br></pre></td></tr></table></figure><p>我自己装的时候也都是这么配置的，注意，这个samba需要你关闭你的防火墙，还得把你共享的目录赋予777的权限（貌似755就够了，我直接给了777）。我这边还遇到过一个很坑爹的问题，就是这样配置了，用Windows访问这个共享目录的时候，要求我输入用户名和密码。其实主要还得把上面的<br><code>security = user</code><br>改成<br><code>security = share</code></p><p>samba也是支持用户管理的，就是可以分配账号密码的，具体的就不展开介绍了。</p><hr><h3 id="apidoc的使用"><a href="#apidoc的使用" class="headerlink" title="apidoc的使用"></a>apidoc的使用</h3><p>　　例如我们在代码里面下了这样的一段注释:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @api &#123;get post&#125;; /brand/:id/:name/:new 这里中括号里面填的的是请求方式（GET POST OPTION DELETE等），后面填的是路由</span><br><span class="line"> * @apiGroup brandList API接口所在的组名称</span><br><span class="line"> * @apiName  brands  API接口名称</span><br><span class="line"> * @apiVersion 1.0.1 API接口版本</span><br><span class="line"> * @apiDescription  API接口的描述</span><br><span class="line"> * @apiParam (入参) &#123;Number&#123;1-9999&#125;&#125;()这个括号里面的填的参数的组，括号里面相同的会被放在同一个表格里面 id=0 请求参数 大括号里面填的是参数类型 里面的大括号表示值的范围 后面就是参数的名称和默认值</span><br><span class="line"> * @apiParam (入参) &#123;String=“a”,“b”,“c”&#125;; name 品牌名称,等于号表示允许值</span><br><span class="line"> * @apiParam (入参) &#123;Boolean&#125;; new </span><br><span class="line"> * @apiParam (入参) &#123;Number&#125; [test] 如果参数套上[]这样的中括号，表明这个值是个可选的值</span><br><span class="line"> *</span><br><span class="line"> * @apiParamExample &#123;json&#125; 接口返回值</span><br><span class="line"> * &#123;</span><br><span class="line"> *     “code” : 0,</span><br><span class="line"> *     “message” : “success”,</span><br><span class="line"> *     “data” : &#123;</span><br><span class="line"> *         “result” : “ok”;</span><br><span class="line"> *     &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> * @apiSampleRequest  下面就是一个模拟请求器，可以帮我们调试接口</span><br><span class="line"> *     http://www.work.dev</span><br><span class="line"> */</span><br></pre></td></tr></table></figure></p><p><a href="http://apidocjs.com/" target="_blank" rel="noopener">基本上用这些已经足够了，其他的用法可以参考它的官网:</a></p><h3 id="生成apidoc"><a href="#生成apidoc" class="headerlink" title="生成apidoc"></a>生成apidoc</h3><p>假如我在我的控制器里面写了这样一段注释:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @api &#123;GET&#125; /user_info 获取用户信息接口</span><br><span class="line"> * @apiGroup User</span><br><span class="line"> * @apiVersion 2.0.0</span><br><span class="line"> * @apiDescription 获取用户信息</span><br><span class="line"> *</span><br><span class="line"> * @apiParam (入参) &#123;String&#125; token 登录成功后客户端返回的token</span><br><span class="line"> *</span><br><span class="line"> * @apiSuccessExample Success-Response:</span><br><span class="line"> *  &#123;</span><br><span class="line"> *      &quot;code&quot;: 0,</span><br><span class="line"> *      &quot;message&quot;: &quot;ok&quot;</span><br><span class="line"> *      &quot;data&quot;: &#123;</span><br><span class="line"> *           &quot;name&quot;: &quot;1&quot;,//状态 0:启用 1:停用</span><br><span class="line"> *           &quot;role&quot;: &quot;1&quot;,//1管理员，0是普通员工</span><br><span class="line"> *           &quot;sex&quot;: &quot;1&quot;,//1表示男性，2表示女性</span><br><span class="line"> *      &#125;</span><br><span class="line"> *  &#125;</span><br><span class="line"> *</span><br><span class="line"> * @apiSampleRequest</span><br><span class="line"> * http://api.test.com/user_info</span><br><span class="line"> *</span><br><span class="line"> */</span><br></pre></td></tr></table></figure></p><p>先cd到项目里面<br>然后执行这样的语句:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apidoc -i app/Http/Controllers -o \\xxx.xxx.xxx.xxx\public\</span><br></pre></td></tr></table></figure></p><p>因为我samba共享的是这样一个文件夹，并且在这个里面放文档。然后我们来看下生成的结果:<br><img src="\images/apidoc生成的结果.jpg" alt="apidoc生成的结果"></p><p>这时候我们直接点击index.html可以直接看到这样的静态页面:</p><p><img src="\images/打开页面的结果.jpg" alt="打开页面结果"></p><hr><h3 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h3><p>到这里，我们就已经很方便的能运用apidoc了，我们可以自己直接写好接口的时候直接写注释，一句命令写到开了samba的服务器上，然后直接访问静态页面，如果不想这样赤裸裸的访问静态页面，可以用node或者nginx直接绑上去，这里就不继续展开讲了</p><hr><h3 id="后续补充"><a href="#后续补充" class="headerlink" title="后续补充"></a>后续补充</h3><p>其实在使用中的时候会发现一些很坑爹的问题，就是GroupName没法用中文，但是其他地方可以用中文。毕竟这个是国外大佬发明的，不是国人的产物，有存在这样的问题也在所难免。我不断的搜，发现github上有人给他提issure。也有给出了解决方案，apidoc的语法其实是支持引用的，所以我们可以这样定义<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @apiDefine name 测试中文</span><br><span class="line"> */</span><br></pre></td></tr></table></figure></p><p> 然后我们怎么使用呢。可以直接<code>@apiUse name</code>也可以直接在注释里面写<code>name</code>,这样就可以使用中文了。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文主要讲述自动化API文档生成——apidoc。网上有几个篇文章都只是介绍apidoc的，具体怎么在自己的项目中使用以及与其他配合使用都是没介绍的。最近开始玩服务器，了解到了有Windows与Linux之间共享文件的方法，就是samba。然后具体和apidoc结合起来非常好用，所以本文就当做笔记来把它记录下来了&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
